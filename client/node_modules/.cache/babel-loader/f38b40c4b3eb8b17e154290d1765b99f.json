{"ast":null,"code":"import _defineProperty from \"/Users/weilyu/Desktop/React-Projects/crown-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CartActionTypes } from \"./cart-types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart-utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/weilyu/Desktop/React-Projects/crown-clothing/src/redux/cart/cart-reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,kBAArB;AACE,+BACKH,KADL;AAEEH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFjB;;AAIF,SAAKJ,eAAe,CAACW,QAArB;AACE,+BACKJ,KADL;AAEEF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF1B;;AAIF,SAAKZ,eAAe,CAACa,WAArB;AACE,+BACKN,KADL;AAEEF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF/B;;AAIF,SAAKZ,eAAe,CAACc,oBAArB;AACE,+BACKP,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CACTC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EADlC;AAFb;;AAMF,SAAKjB,eAAe,CAACkB,UAArB;AACE,+BACKX,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAIF;AACE,aAAOE,KAAP;AA7BJ;AA+BD,CAhCD;;AAkCA,eAAeD,WAAf","sourcesContent":["import { CartActionTypes } from \"./cart-types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart-utils\";\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      };\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n    case CartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id\n        )\n      };\n    case CartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}