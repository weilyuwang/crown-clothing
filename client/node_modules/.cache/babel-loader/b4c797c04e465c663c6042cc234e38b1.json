{"ast":null,"code":"var _jsxFileName = \"/Users/weilyu/Desktop/React-Projects/crown-clothing/src/App.js\";\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport \"./App.css\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-out/sign-in-and-sign-out.component\";\nimport Header from \"./components/header/header.component\";\nimport { selectCurrentUser } from \"./redux/user/user-selectors\"; //want <Header> component to be present on every page, so put it out of the <Switch><Route>\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const setCurrentUser = this.props.setCurrentUser; //open subscription: auth.onAuthStateChanged gets triggered every time a user signs in or out.\n\n    /*\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      //check if there's a user signed in\n      if (userAuth) {\n        //get our user reference first\n        const userRef = await createUserProfileDocument(userAuth);\n        //onSnapshot returns a user snapshot object, then we can set our state (user state) equal to the returned snapshot user object\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n          //console.log(this.state);\n        });\n      }\n      //if userAuth == null, set our state to null as well:\n      setCurrentUser(userAuth);\n    });\n    */\n  }\n\n  componentWillUnmount() {\n    //unsubscribe\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : React.createElement(SignInAndSignUpPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n/*\nconst mapStateToProps = ({ user }) => ({\n  currentUser: user.currentUser\n});\n*/\n//using selector:\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); //pass setCurrentUser action creator function as prop into App\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/weilyu/Desktop/React-Projects/crown-clothing/src/App.js"],"names":["React","Route","Switch","Redirect","connect","createStructuredSelector","HomePage","ShopPage","CheckoutPage","SignInAndSignUpPage","Header","selectCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","setCurrentUser","props","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,mBAAP,MAAgC,6DAAhC;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AAEA,SAASC,iBAAT,QAAkC,6BAAlC,C,CAEA;;AACA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,cADU,GACS,KAAKC,KADd,CACVD,cADU,EAElB;;AACA;;;;;;;;;;;;;;;;;;;AAmBD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB;AACA,SAAKJ,mBAAL;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEb,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKS,KAAL,CAAWG,WAAX,GACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,CADF;AAqBD;;AAtD+B;AAyDlC;;;;;AAMA;;;AACA,MAAMC,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Ce,EAAAA,WAAW,EAAET;AADkC,CAAD,CAAhD,C,CAIA;;AACA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,cAAc,EAAEQ,IAAI,IAAID,QAAQ,CAACP,cAAc,CAACQ,IAAD,CAAf;AADM,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CACpBiB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbV,GAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport \"./App.css\";\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-out/sign-in-and-sign-out.component\";\n\nimport Header from \"./components/header/header.component\";\n\nimport { selectCurrentUser } from \"./redux/user/user-selectors\";\n\n//want <Header> component to be present on every page, so put it out of the <Switch><Route>\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n    //open subscription: auth.onAuthStateChanged gets triggered every time a user signs in or out.\n    /*\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      //check if there's a user signed in\n      if (userAuth) {\n        //get our user reference first\n        const userRef = await createUserProfileDocument(userAuth);\n        //onSnapshot returns a user snapshot object, then we can set our state (user state) equal to the returned snapshot user object\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n          //console.log(this.state);\n        });\n      }\n      //if userAuth == null, set our state to null as well:\n      setCurrentUser(userAuth);\n    });\n    */\n  }\n\n  componentWillUnmount() {\n    //unsubscribe\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              this.props.currentUser ? (\n                <Redirect to=\"/\" />\n              ) : (\n                <SignInAndSignUpPage />\n              )\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n/*\nconst mapStateToProps = ({ user }) => ({\n  currentUser: user.currentUser\n});\n*/\n\n//using selector:\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\n//pass setCurrentUser action creator function as prop into App\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}