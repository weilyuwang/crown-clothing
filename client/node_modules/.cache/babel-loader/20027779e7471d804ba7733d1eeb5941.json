{"ast":null,"code":"var _jsxFileName = \"/Users/weilyuwang/Documents/crown-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop-actions\";\n\nconst ShopPage = ({\n  dispatchFetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    dispatchFetchCollectionsStart();\n  }, [dispatchFetchCollectionsStart]); // [fetchCollectionsStart] paramter means that we only want to fire up fetchCollectionsStart once.\n\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId` //the path param will be passed to CollectionPage as prop (ownProps.match.params.collectionId)\n    ,\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchFetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/weilyuwang/Documents/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStart","ShopPage","dispatchFetchCollectionsStart","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AAEA,OAAOC,uBAAP,MAAoC,oCAApC;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,6BAAF;AAAiCC,EAAAA;AAAjC,CAAD,KAA8C;AAC7DR,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,6BAA6B;AAC9B,GAFQ,EAEN,CAACA,6BAAD,CAFM,CAAT,CAD6D,CAI7D;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEC,KAAK,CAACC,IAAK,EAFtB;AAGE,IAAA,SAAS,EAAEN,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEK,KAAK,CAACC,IAAK,gBADtB,CAEE;AAFF;AAGE,IAAA,SAAS,EAAEL,uBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAcD,CApBD;;AAsBA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACtCJ,EAAAA,6BAA6B,EAAE,MAAMI,QAAQ,CAACN,qBAAqB,EAAtB;AADP,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOQ,kBAAP,CAAP,CAAkCJ,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\n\nimport CollectionPageContainer from \"../collection/collection.container\";\n\nimport { fetchCollectionsStart } from \"../../redux/shop/shop-actions\";\n\nconst ShopPage = ({ dispatchFetchCollectionsStart, match }) => {\n  useEffect(() => {\n    dispatchFetchCollectionsStart();\n  }, [dispatchFetchCollectionsStart]);\n  // [fetchCollectionsStart] paramter means that we only want to fire up fetchCollectionsStart once.\n\n  return (\n    <div className=\"shop-page\">\n      <Route\n        exact\n        path={`${match.path}`}\n        component={CollectionsOverviewContainer}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        //the path param will be passed to CollectionPage as prop (ownProps.match.params.collectionId)\n        component={CollectionPageContainer}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchFetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}